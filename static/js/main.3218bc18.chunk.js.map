{"version":3,"sources":["Die.js","Row.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["fontAwesome","1","2","3","4","5","6","Die","props","state","handleClick","bind","id","this","lockDie","value","frozen","classNames","className","onClick","Component","Row","name","scoreFn","score","counted","Game","dice","Array","from","length","map","locked","uuid","rolls","scores","type","isGameOver","rollDice","toggleLock","scoreUpper","scoreXofKind","scoreFullHouse","scoreStraight","scoreChance","setState","st","item","Math","floor","random","val","forEach","updateScore","numOfDice","test","Object","values","getFaceCounts","filter","sumOfDice","test1","test2","countSequence","diceInSequence","keys","sort","Number","counter","diceList","key","upperScores","lowerScores","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3218bc18.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Die.css';\r\n\r\nconst fontAwesome = {\r\n    1: \"fas fa-dice-one\",\r\n    2: \"fas fa-dice-two\",\r\n    3: \"fas fa-dice-three\",\r\n    4: \"fas fa-dice-four\",\r\n    5: \"fas fa-dice-five\",\r\n    6: \"fas fa-dice-six\"\r\n}\r\n\r\nclass Die extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        const {id} = this.props;\r\n        this.props.lockDie(id);\r\n    }\r\n\r\n    render() { \r\n        const {value,frozen} = this.props;\r\n        var classNames = `Die ${fontAwesome[value]}`;\r\n        if (frozen) {\r\n            classNames += ' frozen';\r\n        }\r\n        return (\r\n            <div className={classNames} onClick={this.handleClick} />\r\n        )\r\n    }\r\n}\r\n \r\nexport default Die;","import React, { Component } from 'react';\r\nimport './Row.css';\r\n\r\nclass Row extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        const {value, name} = this.props\r\n        this.props.scoreFn(value, name);\r\n    }\r\n\r\n    render() {\r\n        const {name, score, counted} = this.props;\r\n        return ( \r\n            <div className=\"row\" onClick={this.handleClick}>\r\n                <div className=\"row-name\">{name}</div>\r\n                <div className={`row-score ${(counted && score === 0)  ? 'error' : ''}`}>{score}</div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Row;","import React, { Component } from 'react';\r\nimport uuid from 'uuid/v4';\r\nimport Die from './Die';\r\nimport Row from './Row';\r\nimport './Game.css';\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            dice: Array.from({length: 5}).map(() => ({locked: false, value: 0, id: uuid()})),\r\n            rolls: 3,\r\n            scores: [\r\n                {name: 'Aces', value: 1, type: 'upper', score: 0, counted: false},\r\n                {name: 'Twos', value: 2, type: 'upper', score: 0, counted: false},\r\n                {name: 'Threes', value: 3, type: 'upper', score: 0, counted: false},\r\n                {name: 'Fours', value: 4, type: 'upper', score: 0, counted: false},\r\n                {name: 'Fives', value: 5, type: 'upper', score: 0, counted: false},\r\n                {name: 'Sixes', value: 6, type: 'upper', score: 0, counted: false},\r\n                {name: '3 of a kind', value: 3, type: 'lower', score: 0, counted: false, scoreFn: 'scoreXofKind'},\r\n                {name: '4 of a kind', value: 4, type: 'lower', score: 0, counted: false,  scoreFn: 'scoreXofKind'},\r\n                {name: 'Full house', value: 25, type: 'lower', score: 0, counted: false, scoreFn: 'scoreFullHouse'},\r\n                {name: 'Small straight', value: 4, type: 'lower', counted: false, score: 0, scoreFn: 'scoreStraight'},\r\n                {name: 'Large straight', value: 5, type: 'lower', counted: false, score: 0, scoreFn: 'scoreStraight'},\r\n                {name: 'Yahtzee', value: 5, type: 'lower', score: 0, counted: false, scoreFn: 'scoreXofKind'},\r\n                {name: 'Chance', value: null, type: 'lower', score: 0, counted: false, scoreFn: 'scoreChance'}\r\n            ],\r\n            isGameOver: false\r\n         }\r\n         this.rollDice = this.rollDice.bind(this);\r\n         this.toggleLock = this.toggleLock.bind(this);\r\n         this.scoreUpper = this.scoreUpper.bind(this);\r\n         this.scoreXofKind = this.scoreXofKind.bind(this);\r\n         this.scoreFullHouse = this.scoreFullHouse.bind(this);\r\n         this.scoreStraight = this.scoreStraight.bind(this);\r\n         this.scoreChance = this.scoreChance.bind(this);\r\n    }\r\n\r\n    rollDice() {\r\n        this.setState(st => ({ \r\n            dice: st.dice.map(item => (item.locked === false ? { ...item, value: Math.floor(Math.random() * 6) +1 } : item)),\r\n            rolls: st.rolls - 1\r\n        }))\r\n    }\r\n\r\n    toggleLock(id) {\r\n        this.setState(st => ({\r\n            dice: st.dice.map(item => (item.id === id ? {...item, locked: !item.locked} : item))\r\n        }))\r\n    }\r\n\r\n    scoreUpper(val, name) {\r\n        const {dice} = this.state;\r\n        var score = 0;\r\n        dice.forEach(item => {\r\n            if (item.value === val) {\r\n                score += item.value;\r\n            }\r\n        })\r\n        this.updateScore(name, score);\r\n    }\r\n\r\n    scoreXofKind(numOfDice, name) {\r\n        const test = (Object.values(this.getFaceCounts()).filter(item => item >= numOfDice)) > 0;\r\n        if(test && numOfDice >= 5) {\r\n            this.updateScore(name, 50)\r\n        } else if (test) {\r\n            this.updateScore(name, this.sumOfDice())\r\n        } else {\r\n            this.updateScore(name, 0);\r\n        }\r\n    }\r\n\r\n    scoreFullHouse(score, name) {\r\n        const values = Object.values(this.getFaceCounts());\r\n        const test1 = (values.filter(item => item === 3) > 0);\r\n        const test2 = (values.filter(item => item === 2) > 0);\r\n        if(test1 && test2) {\r\n            this.updateScore(name, score);\r\n        } else {\r\n            this.updateScore(name, 0);\r\n        }\r\n    }\r\n\r\n    scoreStraight(numOfDice, name) {\r\n        const test = this.countSequence(numOfDice);\r\n        if(test) {\r\n            let score = name === 'Large straight' ? 40 : 30;\r\n            this.updateScore(name, score);\r\n        } else {\r\n            this.updateScore(name, 0)\r\n        }\r\n    }\r\n\r\n    scoreChance(val, name) {\r\n        const score = this.sumOfDice();\r\n        this.updateScore(name, score);\r\n    }\r\n\r\n    countSequence(diceInSequence) {\r\n        const values = Object.keys(this.getFaceCounts()).sort();\r\n        if(Number(values[0]) === values[diceInSequence-1] - (diceInSequence-1)) {\r\n            return true;\r\n        } else if (Number(values[1]) === values[diceInSequence-1] - (diceInSequence-1)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getFaceCounts() {\r\n        const {dice} = this.state;\r\n        let counter = {};\r\n        dice.forEach(item=> {\r\n            counter[item.value] = (counter[item.value] || 0 ) + 1;\r\n        })\r\n        return counter;\r\n    }\r\n\r\n    updateScore(name, score) {\r\n        this.setState(st => ({\r\n            scores: st.scores.map(item => ((item.name === name && !item.counted) ? {...item, score: score, counted: true} : item )),\r\n            rolls: 3,\r\n            dice: st.dice.map(item => ({...item, locked: false}))\r\n        }));\r\n        this.rollDice();\r\n    }\r\n\r\n    sumOfDice() {\r\n        const {dice} = this.state;\r\n        let score = 0;\r\n        dice.forEach(item => {\r\n            score += item.value;\r\n        });\r\n        return score;\r\n    }\r\n\r\n    render() { \r\n        const {dice,rolls,scores} = this.state;\r\n        const diceList = dice.map((item) => (\r\n            <Die key={item.id} value={item.value} id={item.id} lockDie={this.toggleLock} frozen={item.locked} />\r\n        ));\r\n        const upperScores = scores.filter(item => (item.type=== 'upper')).map(item => (\r\n            <Row\r\n                name={item.name}\r\n                score={item.score}\r\n                scoreFn={this.scoreUpper}\r\n                value={item.value}\r\n                counted={item.counted}\r\n            />\r\n        ));\r\n        const lowerScores = scores.filter(item => (item.type=== 'lower')).map(item => (\r\n            <Row\r\n                name={item.name}\r\n                score={item.score}\r\n                scoreFn={this[item.scoreFn]}\r\n                value={item.value}\r\n                counted={item.counted}\r\n            />\r\n        ));\r\n        return (\r\n            <div className=\"Game\">\r\n                <div className=\"Game-dice\">\r\n                    {diceList}\r\n                </div>\r\n                <button onClick={this.rollDice} className=\"Game-roll\" disabled={rolls === 0}>{rolls} Rolls left!</button>\r\n                <div className=\"Game-scores\">\r\n                    <h2>Upper Section</h2>\r\n                    {upperScores}\r\n\r\n                    <h2>Lower Section</h2>\r\n                    {lowerScores}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Game;","import React from 'react';\nimport Game from './Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}